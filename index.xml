<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jefo</title><link>https://qizhengzou.github.io/</link><description>Jefo</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2838264218@qq.com (Jefo)</managingEditor><webMaster>2838264218@qq.com (Jefo)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 24 Jan 2022 20:52:12 +0800</lastBuildDate><atom:link href="https://qizhengzou.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>CN_HTTP</title><link>https://qizhengzou.github.io/cn_http/</link><pubDate>Mon, 24 Jan 2022 20:52:12 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/cn_http/</guid><description>来自极客时间学习笔记 HTTP 前言 据 NetCraft 公司统计，目前全球至少有 16 亿个网站、2 亿多个独立域名，而这个庞大网络世界的底层运转机制就是 HTTP。 HTTP 不就是请</description></item><item><title>CN_base_02</title><link>https://qizhengzou.github.io/cn_base_02/</link><pubDate>Sun, 23 Jan 2022 10:50:28 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/cn_base_02/</guid><description>笔记来自 中科大郑烇 计网PPT，改编自计算机网络-自顶向下 第七版 应用层 目标： 网络应用的原理：网络应用协议的概念和实现方面 传输层的服务模型 客户-</description></item><item><title>CN_base_01</title><link>https://qizhengzou.github.io/cn_base_01/</link><pubDate>Sun, 23 Jan 2022 10:50:16 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/cn_base_01/</guid><description>笔记来自 中科大郑烇 计网PPT，改编自计算机网络-自顶向下 第七版 概论 1.1 什么是Internet? 具体构成角度： 计算设备 主机=端系统（运行网络应用</description></item><item><title>Structural_type</title><link>https://qizhengzou.github.io/structural_type/</link><pubDate>Sat, 22 Jan 2022 09:21:00 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/structural_type/</guid><description>facade API 为facade 模块的外观接口，大部分代码使用此接口简化对facade类的访问。 facade模块同时暴露了a和b 两个Module 的NewX</description></item><item><title>Behavioral_type</title><link>https://qizhengzou.github.io/behavioral_type/</link><pubDate>Sat, 22 Jan 2022 09:20:41 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/behavioral_type/</guid><description>mediator 中介者模式封装对象之间互交，使依赖变的简单，并且使复杂互交简单化，封装在中介者中。 例子中的中介者使用单例模式生成中介者。 中介者的chang</description></item><item><title>Create_type</title><link>https://qizhengzou.github.io/create_type/</link><pubDate>Sat, 22 Jan 2022 09:19:30 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/create_type/</guid><description>simple factory go 语言没有构造函数一说，所以一般会定义NewXXX函数来初始化相关类。 NewXXX 函数返回接口时就是简单工厂模式，也就是说Golang的一般推荐做</description></item><item><title>MUSK</title><link>https://qizhengzou.github.io/musk/</link><pubDate>Wed, 19 Jan 2022 19:49:08 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/musk/</guid><description>摘自1.6万字马斯克访谈实录 21年末，Youtube知名科技UP主，拥有143万粉丝的大V Lex Fridman与马斯克进行了一场长达2小时31分</description></item><item><title>Go_base_07</title><link>https://qizhengzou.github.io/go_base_07/</link><pubDate>Thu, 06 Jan 2022 09:16:49 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_07/</guid><description>参考学习go语言中文网、C语言中文网、golang官方文档等 并发编程 并发介绍 进程和线程 进程是程序在操作系统中的一次执行过程，系统进行资源分配</description></item><item><title>Go_base_06</title><link>https://qizhengzou.github.io/go_base_06/</link><pubDate>Thu, 06 Jan 2022 09:16:45 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_06/</guid><description>参考学习go语言中文网、C语言中文网、golang官方文档等 网络编程 互联网协议介绍 互联网的核心是一系列协议，总称为”互联网协议”（Inter</description></item><item><title>Go_base_05</title><link>https://qizhengzou.github.io/go_base_05/</link><pubDate>Thu, 06 Jan 2022 09:16:40 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_05/</guid><description>参考学习go语言中文网、C语言中文网、golang官方文档等 面向对象 Is Go an object-oriented language? Yes and no. Although Go has types and methods and allows an object-oriented style of programming, there is no type hierarchy. The concept of “interf</description></item></channel></rss>