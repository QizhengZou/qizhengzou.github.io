<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jefo</title><link>https://qizhengzou.github.io/</link><description>Jefo</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2838264218@qq.com (Jefo)</managingEditor><webMaster>2838264218@qq.com (Jefo)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 06 Jan 2022 09:16:49 +0800</lastBuildDate><atom:link href="https://qizhengzou.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Go_base_07</title><link>https://qizhengzou.github.io/go_base_07/</link><pubDate>Thu, 06 Jan 2022 09:16:49 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_07/</guid><description>并发编程 并发介绍 进程和线程 进程是程序在操作系统中的一次执行过程，系统进行资源分配和调度的一个独立单位。 线程是进程的一个执行实体,是CPU调度</description></item><item><title>Go_base_06</title><link>https://qizhengzou.github.io/go_base_06/</link><pubDate>Thu, 06 Jan 2022 09:16:45 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_06/</guid><description>网络编程 互联网协议介绍 互联网的核心是一系列协议，总称为”互联网协议”（Internet Protocol Suite），正是这一些协议规定了电脑如何连接和组网</description></item><item><title>Go_base_05</title><link>https://qizhengzou.github.io/go_base_05/</link><pubDate>Thu, 06 Jan 2022 09:16:40 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_05/</guid><description>面向对象 匿名字段 go支持只提供类型而不写字段名的方式，也就是匿名字段，也称为嵌入字段 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28</description></item><item><title>Go_base_04</title><link>https://qizhengzou.github.io/go_base_04/</link><pubDate>Thu, 06 Jan 2022 09:16:37 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_04/</guid><description>方法 方法定义 Golang 方法总是绑定对象实例，并隐式将实例作为第一实参 (receiver)。 只能为当前包内命名类型定义方法。 参数 receiver 可任意命名。如方法中</description></item><item><title>Go_base_03</title><link>https://qizhengzou.github.io/go_base_03/</link><pubDate>Thu, 06 Jan 2022 09:16:34 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_03/</guid><description>函数 函数定义 go的函数特点： 无需声明原型。 支持不定参、变参。 支持多返回值。 支持命名返回参数。 支持匿名函数和闭包。（闭包详见后文） 函数也是一种</description></item><item><title>Go_base_02</title><link>https://qizhengzou.github.io/go_base_02/</link><pubDate>Thu, 06 Jan 2022 09:16:07 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/go_base_02/</guid><description>流程控制 if Go 编程语言中 if 语句的语法如下： 1 2 3 4 5 6 7 8 可省略条件表达式括号。 持初始化语句，可定义代码块局部变量。 代码块左花括号必须在条件表</description></item><item><title>Algorithm_array</title><link>https://qizhengzou.github.io/algorithm_array/</link><pubDate>Thu, 06 Jan 2022 08:17:33 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/algorithm_array/</guid><description>数组 数组基础 数组是存放在连续内存空间上的相同类型数据的集合。 因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移</description></item><item><title>DistributedSystem_HongweiDu_14</title><link>https://qizhengzou.github.io/distributedsystem_hongweidu_14/</link><pubDate>Sat, 01 Jan 2022 15:21:52 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/distributedsystem_hongweidu_14/</guid><description>topics Understanding lecture notes and tutorial questions. 1.Introduction A distributed system is defined as one in which components at networked computers communicate and coordinate their actions only by passing messages. The motivation of constructing a distributed system is resource sharing and collaborative computing Distributed system features. Concurrency No global clock Independent failure Distributed system challenges. Heterogeneity Openness Security Scalability Failure handling Concurrency Transparency Quality of Service 2.System Model Difficulties for</description></item><item><title>DistributedSystem_HongweiDu_catalogue</title><link>https://qizhengzou.github.io/distributedsystem_hongweidu_catalogue/</link><pubDate>Sat, 01 Jan 2022 15:21:52 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/distributedsystem_hongweidu_catalogue/</guid><description> DHW_01(intro) topics motivation definition features challanges conclusino DHW_02(system modules) physical model architectural model fundamental model DHW_03(physical time) DHW_04(logic time) DHW_05(mutual exclusion and election algorithms) mutual exclusion election algorithms DHW_06(socket and RPC) socket communication remote procedure call(RPC) DHW_07(internetworking) DHW_08(name services) DHW_09(group communication) Implementing Group Communication Mechanisms Reliability of multicasts Message ordering IP multicast routing DHW_10(Consistency and Replication) DHW_11(Unix File Systems and Distributed File Systems) DHW_12(Transaction Processing Systems) DHW_13(Web Searching Technologies) DHW_14(DistributedSystem_HongweiDu_catalogue)</description></item><item><title>DistributedSystem_HongweiDu_13</title><link>https://qizhengzou.github.io/distributedsystem_hongweidu_13/</link><pubDate>Sat, 01 Jan 2022 15:21:48 +0800</pubDate><author>作者</author><guid>https://qizhengzou.github.io/distributedsystem_hongweidu_13/</guid><description>Web Searching Technologies Some helpful web sites：
A history of search engines: http://www.wiley.com/legacy/compbooks/sonnenreich/webdev/history.html Open source search engines written in Java: http://java-source.net/open-source/search-engines Robots: http://www.robotstxt.org/wc/robots.html Search Engines Architecture：
Spiders (Web Crawler)：
Automatically Retrieve web pages Start with an URL, retrieving the web page Find all URLs on the web page and recursively retrieve not-yet searched URLs Algorithmic Issues Efficiency and Quality: how to quickly gather as many useful web pages as possible?</description></item></channel></rss>