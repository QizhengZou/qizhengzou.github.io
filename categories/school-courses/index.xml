<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>School Courses on Jefo</title><link>https://qizhengzou.github.io/categories/school-courses/</link><description>Recent content in School Courses on Jefo</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 21 Dec 2021 19:38:13 +0800</lastBuildDate><atom:link href="https://qizhengzou.github.io/categories/school-courses/index.xml" rel="self" type="application/rss+xml"/><item><title>ISC_base_10</title><link>https://qizhengzou.github.io/2021/information-security-management/</link><pubDate>Tue, 21 Dec 2021 19:38:13 +0800</pubDate><guid>https://qizhengzou.github.io/2021/information-security-management/</guid><description>信息安全管理 10.1 概述 当今社会已经进入到信息化社会，其信息安全是建立在信息社会的基础设施及信息服务系统之间的互联、互通、互操作意义上的安全需求上</description></item><item><title>ISC_base_09</title><link>https://qizhengzou.github.io/2021/content-security/</link><pubDate>Tue, 21 Dec 2021 19:37:20 +0800</pubDate><guid>https://qizhengzou.github.io/2021/content-security/</guid><description>内容安全 9.1 概述 信息内容安全有两方面内容: 一方面是指针对合法的信息内容加以安全保护，如对合法的音像制品及软件的版权保护； 内容保护 数字水印 版权控</description></item><item><title>Cry_base_07</title><link>https://qizhengzou.github.io/2021/hashmacds/</link><pubDate>Thu, 16 Dec 2021 15:24:07 +0800</pubDate><guid>https://qizhengzou.github.io/2021/hashmacds/</guid><description>Hash,MAC,DS 哈希函数应用 消息验证 完整性 口令验证 MAC（与加密配合） 数字签名（与加密配合） 两个简易哈希函数 全文XOR 每块异或之后左移一位 哈希函数要求（哈</description></item><item><title>Cry_base_06</title><link>https://qizhengzou.github.io/2021/public-key-encryption/</link><pubDate>Thu, 16 Dec 2021 15:24:04 +0800</pubDate><guid>https://qizhengzou.github.io/2021/public-key-encryption/</guid><description>公钥加密（RSA，DH, ElGamal 与椭圆曲线） 公钥密码体制 非对称密码：免去密钥分发、密钥管理简单 原则 单向函数 陷门单向函数 RSA 密钥生成 选择两个大素数p,</description></item><item><title>Cry_base_05</title><link>https://qizhengzou.github.io/2021/sequence-cipher/</link><pubDate>Thu, 16 Dec 2021 15:24:00 +0800</pubDate><guid>https://qizhengzou.github.io/2021/sequence-cipher/</guid><description>序列密码 概述 序列密码，也称流密码，是对称密码中的一种 序列密码的因一次一密应运而生的 思想：用短的种子密钥来获取长的密钥序列，其独立于明文消息和</description></item><item><title>Cry_base_04</title><link>https://qizhengzou.github.io/2021/mathematical-principles/</link><pubDate>Thu, 16 Dec 2021 15:23:56 +0800</pubDate><guid>https://qizhengzou.github.io/2021/mathematical-principles/</guid><description>数学原理 模运算 费马小定理 拓展欧几里得算法 中国剩余定理 群环域 $Z_n$ 伽罗瓦域Galois FIeld GF(p) 多项式运算 GF(2)上的多项式 质多项式 快速运算 素数Pri</description></item><item><title>Cry_base_03</title><link>https://qizhengzou.github.io/2021/block-cipher/</link><pubDate>Thu, 16 Dec 2021 15:23:53 +0800</pubDate><guid>https://qizhengzou.github.io/2021/block-cipher/</guid><description>分组密码 对称加密分类 分组密码/块密码（Block Cipher） 一次加密一个分组（Playfair） 序列密码/流密码（Stream Cipher</description></item><item><title>Cry_base_02</title><link>https://qizhengzou.github.io/2021/classical-cryptography/</link><pubDate>Thu, 16 Dec 2021 15:23:51 +0800</pubDate><guid>https://qizhengzou.github.io/2021/classical-cryptography/</guid><description>古典密码学 代换密码 将明文中的每个字符代换成密文中的另一个字符，代换后的各字符位置不变。 单字母单表密码 加法密码：caesar cipher $c_i=(m_i+k)mod26$ $m_i=(c_i-k)mod26$ 加乘密码：a</description></item><item><title>Cry_base_01</title><link>https://qizhengzou.github.io/2021/cryptography-intro/</link><pubDate>Thu, 16 Dec 2021 14:32:42 +0800</pubDate><guid>https://qizhengzou.github.io/2021/cryptography-intro/</guid><description>课程简介 不包含内容 计算机安全，例如病毒 网络安全，例如网络攻击 安全网络协议，例如安全传输层协议 公钥密码使得发送端和接收端无密钥传输的保密通信成</description></item><item><title>DistributedSystem_HongweiDu_07</title><link>https://qizhengzou.github.io/2021/internetworking/</link><pubDate>Fri, 03 Dec 2021 14:36:03 +0800</pubDate><guid>https://qizhengzou.github.io/2021/internetworking/</guid><description>Internetworking网际路由 Internet Structure: Network of Networks： Internet is in a hierarchical structure National/ International Backbone Providers (NBP) e.g. BBN/GTE, Sprint, AT&amp;amp;T, IBM, UUNet interconnect (peer) with each other privately, or at public Network Access Point (NAPs) Regional ISPs connect into NBPs Local ISP connect</description></item><item><title>DistributedSystem_HongweiDu_06</title><link>https://qizhengzou.github.io/2021/socket-rpc/</link><pubDate>Fri, 03 Dec 2021 14:35:58 +0800</pubDate><guid>https://qizhengzou.github.io/2021/socket-rpc/</guid><description>Socket Communication套接字通信（直接通信) Clients and Servers： A distributed system can be generally modeled by clients and servers (processes). Clients and servers are usually on different machines and they interact with each other via message passing. To offer a service, a server</description></item><item><title>DistributedSystem_HongweiDu_05</title><link>https://qizhengzou.github.io/2021/mutual-exclusion-election-algorithms/</link><pubDate>Fri, 03 Dec 2021 14:35:53 +0800</pubDate><guid>https://qizhengzou.github.io/2021/mutual-exclusion-election-algorithms/</guid><description>Mutual Exclusion &amp;amp; Election Algorithms(互斥算法 &amp;amp; 选举算法) 互斥算法 Process Synchronization: Techniques to coordinate execution among processes One process may have to wait for another Shared resource (e.g. critical section) may require exclusive access Requirements of Mutual Exclusion Algorithms: A mutual exclusion algorithm should satisfy the following properties: Safety Property:</description></item><item><title>DistributedSystem_HongweiDu_04</title><link>https://qizhengzou.github.io/2021/logical-time/</link><pubDate>Fri, 03 Dec 2021 14:35:49 +0800</pubDate><guid>https://qizhengzou.github.io/2021/logical-time/</guid><description>Logical Time Motivation of logical clocks: Cannot synchronize physical clocks perfectly in distributed systems. [Lamport 1978] Main function of computer clocks – order events If two processes don’t interact, there is no need to sync clocks. This observation leads to “causality” Causality（因果性）:</description></item><item><title>DistributedSystem_HongweiDu_03</title><link>https://qizhengzou.github.io/2021/physical-time/</link><pubDate>Fri, 03 Dec 2021 14:35:44 +0800</pubDate><guid>https://qizhengzou.github.io/2021/physical-time/</guid><description>Physical Time Why Timestamps in Systems? Precise performance measurements Guarantee “up-to-date” or recentness of data Temporal ordering of events produced by concurrent processes Synchronization between senders and receivers of messages Coordination of joint activities Serialization of concurrent accesses to shared objects …… Physical time: Solar time 1 sec = 1 day / 86400 Problem: days are of different</description></item><item><title>DistributedSystem_HongweiDu_02</title><link>https://qizhengzou.github.io/2021/distributedsystem-hongweidu-system-modules/</link><pubDate>Fri, 03 Dec 2021 14:35:38 +0800</pubDate><guid>https://qizhengzou.github.io/2021/distributedsystem-hongweidu-system-modules/</guid><description>System Modules Descriptive models for distributed system design: Physical model Most explicit description of a system. Capture hardware composition in terms of computers and their interconnecting networks. Architectural model Describes a systems in terms of computational and communication task performed by computational elements. Fundamental model Abstract perspective in order to study the individual aspects of a system. Three models are introduced: interaction model, failure model, and the security model. Difficulties</description></item><item><title>DistributedSystem_HongweiDu_01</title><link>https://qizhengzou.github.io/2021/distributedsystem-hongweidu-intro/</link><pubDate>Fri, 03 Dec 2021 14:35:31 +0800</pubDate><guid>https://qizhengzou.github.io/2021/distributedsystem-hongweidu-intro/</guid><description>Intr HongweiDu(堵宏伟) Topics Introduction Distributed Systems models Distributed Time and Clock Synchronization Socket Communication Remote Method Invocation(RMI) Group Communication Mutual exclusion &amp;amp; election algorithms Replication …… Motivation Resource sharing Computers connected by the network and share resources. Hardware sharing, software sharing, data sharing, service sharing.media stream sharing. Collaborative computing Parallel computing, distributed computing Definition A distributed</description></item><item><title>OperatingSystem_base_05</title><link>https://qizhengzou.github.io/2021/equipmet-management/</link><pubDate>Tue, 30 Nov 2021 18:26:58 +0800</pubDate><guid>https://qizhengzou.github.io/2021/equipmet-management/</guid><description>设备管理 I/O 管理概述 I/O设备的分类与管理的任务 I/O设备的分类 (1)按设备的使用特性分类：按设备的使用特性可以将设备分为存储设备、人机交互设</description></item><item><title>OperatingSystem_base_04</title><link>https://qizhengzou.github.io/2021/file-management/</link><pubDate>Tue, 30 Nov 2021 18:26:50 +0800</pubDate><guid>https://qizhengzou.github.io/2021/file-management/</guid><description>文件管理 文件系统基础 文件的概念 文件的概念 数据处理是计算机的主要功能之一， 与数据处理相关的数据管理和数据保存是必不可少的，甚至是较为重要的环节</description></item><item><title>CA_base_01</title><link>https://qizhengzou.github.io/2021/ca-intro/</link><pubDate>Mon, 29 Nov 2021 14:19:01 +0800</pubDate><guid>https://qizhengzou.github.io/2021/ca-intro/</guid><description>1 内容来源：计算机体系结构基础（第三版）胡伟武等 引言 造计算机： 硬件方面：计算机组成原理和计算机体系结构 软件方面：操作系统和编译原理 由CPU和</description></item><item><title>SEK_base_05</title><link>https://qizhengzou.github.io/2021/software-coding-testing-and-quality-assurance/</link><pubDate>Thu, 25 Nov 2021 15:48:07 +0800</pubDate><guid>https://qizhengzou.github.io/2021/software-coding-testing-and-quality-assurance/</guid><description>软件编码、测试和质量保障 5.1 软件编程 软件编程是一个复杂而迭代的过程，它不仅仅是编写代码，还应该包括代码审查、单元测试、代码优化、集成调试等一系</description></item><item><title>SEK_base_04</title><link>https://qizhengzou.github.io/2021/software-design/</link><pubDate>Thu, 25 Nov 2021 15:48:03 +0800</pubDate><guid>https://qizhengzou.github.io/2021/software-design/</guid><description>软件设计 软件工程开发方法与软件设计 软件工程开发方法 传统开发方法 功能分解法 以系统需要提供的功能为中心来组织系统 首先定义各种功能，然后把功能分解</description></item><item><title>SEK_base_03</title><link>https://qizhengzou.github.io/2021/software-demand-engineering/</link><pubDate>Thu, 25 Nov 2021 15:47:59 +0800</pubDate><guid>https://qizhengzou.github.io/2021/software-demand-engineering/</guid><description>软件需求工程 软件需求与需求工程 软件需求 软件开发要能够满足各方面的需求 质量要求：可以工作的软件； 进度要求：在预定的时间完成; 功能要求：完成用户</description></item><item><title>SEK_base_02</title><link>https://qizhengzou.github.io/2021/software-engineering-procedure-and-management/</link><pubDate>Thu, 25 Nov 2021 15:47:55 +0800</pubDate><guid>https://qizhengzou.github.io/2021/software-engineering-procedure-and-management/</guid><description>第二部分 软件项目开发过程与管理 2.1 软件项目开发过程 为什么要将软件开发过程划分为多个阶段？ 六七十年代的软件开发过程：程序员个人设计、个人操作、小</description></item><item><title>SEK_base_01</title><link>https://qizhengzou.github.io/2021/software-engineering-introduction/</link><pubDate>Thu, 25 Nov 2021 15:43:12 +0800</pubDate><guid>https://qizhengzou.github.io/2021/software-engineering-introduction/</guid><description>第一部分 软件工程概论 软件工程的产生与发展 传统的理解： 软件：控制计算机硬件功能及其运行的指令、程序和符号语言 工程：将科学及数学原理运用于实际用</description></item><item><title>ISC_base_08</title><link>https://qizhengzou.github.io/2021/network-security-protocol/</link><pubDate>Sun, 21 Nov 2021 11:36:15 +0800</pubDate><guid>https://qizhengzou.github.io/2021/network-security-protocol/</guid><description>网络安全协议 8.1 概述 许多网络攻击都是由网络协议（如TCP/IP）的固有漏洞引起的，因此，为了保证网络传输和应用的安全，各种类型的网络安全协议不</description></item><item><title>ISC_base_07</title><link>https://qizhengzou.github.io/2021/network-defense/</link><pubDate>Sun, 21 Nov 2021 11:36:12 +0800</pubDate><guid>https://qizhengzou.github.io/2021/network-defense/</guid><description>网络防御 7.1 概述 网络防御是一个综合性的安全工程，不是几个网络安全产品能够完成的任务。 防御需要解决多层面的问题，除了安全技术之外，安全管理也十分</description></item><item><title>ISC_base_06</title><link>https://qizhengzou.github.io/2021/cyber-threats/</link><pubDate>Sun, 21 Nov 2021 11:36:09 +0800</pubDate><guid>https://qizhengzou.github.io/2021/cyber-threats/</guid><description>网络威胁 6.1 概述 威胁：用威力逼迫恫吓使人屈服。 网络威胁：是网络安全受到威胁、存在着危险。 随着互联网的不断发展，网络安全威胁也呈现了一种新的趋势</description></item><item><title>ISC_base_05</title><link>https://qizhengzou.github.io/2021/access-control/</link><pubDate>Sun, 21 Nov 2021 11:36:04 +0800</pubDate><guid>https://qizhengzou.github.io/2021/access-control/</guid><description>访问控制 5.1 概述 身份认证：识别“用户是谁”的问题。 访问控制：管理用户对资源的访问。 主体对于客体的每一次访问，访问控制系统均要审核该次访问操作是</description></item><item><title>ISC_base_04</title><link>https://qizhengzou.github.io/2021/identity-authentication/</link><pubDate>Sun, 21 Nov 2021 11:35:58 +0800</pubDate><guid>https://qizhengzou.github.io/2021/identity-authentication/</guid><description>身份认证 4.1 概述 问题的提出：什么是身份认证？ 身份认证是证实用户的真实身份与其所声称的身份是否相符的过程。 身份认证的依据应包含只有该用户所特有的</description></item><item><title>ISC_base_03</title><link>https://qizhengzou.github.io/2021/physical-security/</link><pubDate>Sun, 21 Nov 2021 11:35:55 +0800</pubDate><guid>https://qizhengzou.github.io/2021/physical-security/</guid><description>物理安全 概述 物理安全技术包括: 防盗、防火、防静电、防雷击、防信息泄漏、物理隔离； 基于物理环境的容灾技术和物理隔离技术也属于物理安全技术范畴。</description></item><item><title>ISC_base_02</title><link>https://qizhengzou.github.io/2021/foundations-of-cryptography/</link><pubDate>Sun, 21 Nov 2021 11:35:51 +0800</pubDate><guid>https://qizhengzou.github.io/2021/foundations-of-cryptography/</guid><description>密码学基础 解决数据的机密性、完整性、不可否认性以及身份识别等问题均需要以密码为基础密码技术是保障信息安全的核心基础。 密码学(Cryptogr</description></item><item><title>Mysql_base_14</title><link>https://qizhengzou.github.io/2021/fault-recovery/</link><pubDate>Sun, 21 Nov 2021 10:18:45 +0800</pubDate><guid>https://qizhengzou.github.io/2021/fault-recovery/</guid><description>故障恢复 数据库的故障类型及其影响 DBMS的运行方式： DBMS利用内存(主存)和外存(辅存)这样的存储体系来进行数据库管理 在内存中, 又将其分为</description></item><item><title>ISC_base_01</title><link>https://qizhengzou.github.io/2021/course-overview/</link><pubDate>Sun, 21 Nov 2021 10:13:37 +0800</pubDate><guid>https://qizhengzou.github.io/2021/course-overview/</guid><description>信息安全课程概述 教学目的、目标与内容 课程定位：信息安全领域基础课程 《密码学基础》与《网络安全》等课程的先修课程。 课程目的： 对信息安全领域知识</description></item><item><title>DistributedSystem_base_02</title><link>https://qizhengzou.github.io/2021/system-models/</link><pubDate>Wed, 17 Nov 2021 08:45:55 +0800</pubDate><guid>https://qizhengzou.github.io/2021/system-models/</guid><description>系统模型 简介 物理模型是描述系统的-个最显式的方法，它从计算机(和其他设备，例如移动电话)及其互联的网络方面考虑系统的硬件组成。 体系结构模型从</description></item><item><title>BigData_base_04_2</title><link>https://qizhengzou.github.io/2021/understanding-data/</link><pubDate>Mon, 15 Nov 2021 15:54:13 +0800</pubDate><guid>https://qizhengzou.github.io/2021/understanding-data/</guid><description>数据理解的主要任务 数据理解在统计学中称为exploratory data analysis（EDA）： 借助人类对数据的观察和“模式”识别能力 对数据进行</description></item><item><title>BigData_base_04_1</title><link>https://qizhengzou.github.io/2021/structured-representation-of-data/</link><pubDate>Mon, 15 Nov 2021 15:54:08 +0800</pubDate><guid>https://qizhengzou.github.io/2021/structured-representation-of-data/</guid><description>数据的属性类型 结构化数据 数据是数据对象的集合 数据对象用一组刻画对象基本特征的属性描述 对象也叫做记录、数据点、案例、样本、观测或实体等 属性（a</description></item><item><title>OperatingSystem_base_03</title><link>https://qizhengzou.github.io/2021/memory-management/</link><pubDate>Wed, 10 Nov 2021 13:14:39 +0800</pubDate><guid>https://qizhengzou.github.io/2021/memory-management/</guid><description>内存管理 内存管理基础 内存管理概念：程序装入与链接、逻辑地址与物理地址空间、内存保护。 存储器是计算机系统的重要组成部分，是计算机系统中的一种 宝</description></item><item><title>OperatingSystem_base_02</title><link>https://qizhengzou.github.io/2021/process-management/</link><pubDate>Wed, 10 Nov 2021 13:14:32 +0800</pubDate><guid>https://qizhengzou.github.io/2021/process-management/</guid><description>进程管理 进程与线程 进程概念 进程引入 在计算机操作系统中，进程是资源分配的基本单位（与线程的主要区别），也是独立运行的基本单位。 程序的顺序执行：</description></item><item><title>OperatingSystem_base_01</title><link>https://qizhengzou.github.io/2021/operating-system-intro/</link><pubDate>Wed, 10 Nov 2021 13:14:26 +0800</pubDate><guid>https://qizhengzou.github.io/2021/operating-system-intro/</guid><description>绪论 操作系统(Operating System, OS)的概念、特征、功能和提供的服务 引入操作系统的目的是： 提供一个计算机用户与计算机硬件系统之间的接口，使</description></item><item><title>DistributedSystem_base_01</title><link>https://qizhengzou.github.io/2021/characteristics-of-distributed-system/</link><pubDate>Wed, 10 Nov 2021 10:24:24 +0800</pubDate><guid>https://qizhengzou.github.io/2021/characteristics-of-distributed-system/</guid><description>分布式系统的特征 简介 我们把分布式系统定义成一个其硬件或软件组件分布在联网的计算机上，组件之间通过传递消息进行通信和动作协调的系统。 我们定义的</description></item><item><title>Mysql_base_13</title><link>https://qizhengzou.github.io/2021/database-transaction-processing-technology/</link><pubDate>Tue, 09 Nov 2021 11:28:55 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-transaction-processing-technology/</guid><description>事务处理 为什么需要并发控制 并发控制的缘由: 并发控制及相应的事务处理技术是DBMS的核心技术: 事务调度及可串行性 事务是数据库管理系统提供的控制</description></item><item><title>Mysql_base_12</title><link>https://qizhengzou.github.io/2021/query-optimization/</link><pubDate>Tue, 09 Nov 2021 11:28:51 +0800</pubDate><guid>https://qizhengzou.github.io/2021/query-optimization/</guid><description>数据查询优化 在建表和建索引的时候，要更有意识地为将来的查询优化做综合考虑，比如确定是否使用递增主键、主键的列怎样选择，等等。 为什么要及什么是</description></item><item><title>Mysql_base_11</title><link>https://qizhengzou.github.io/2021/database-query-implementation-algorithm/</link><pubDate>Tue, 09 Nov 2021 11:28:46 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-query-implementation-algorithm/</guid><description>数据库查询实现算法 数据库查询实现算法-I 数据库查询实现算法概述 查询实现&amp;amp;查询优化： 查询实现算法总览： 以连接操作为例看逻辑实现算法与物</description></item><item><title>Mysql_base_10</title><link>https://qizhengzou.github.io/2021/database-index/</link><pubDate>Tue, 09 Nov 2021 11:28:43 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-index/</guid><description>数据库索引 为什么需要索引与什么是索引 索引：定义在存储表(Table)基础之上，无需检查所有记录，快速定位所需记录的一种辅助存储结构，由一系列</description></item><item><title>Mysql_base_09</title><link>https://qizhengzou.github.io/2021/database-physical-storage/</link><pubDate>Tue, 09 Nov 2021 11:28:24 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-physical-storage/</guid><description>数据库物理存储 基础回顾-计算机系统的存储体系 数据库的存储与检索问题 两个基本问题如何解决？ 如何高效率的存储？&amp;ndash;数据组织与索引 如何快</description></item><item><title>Mysql_base_08</title><link>https://qizhengzou.github.io/2021/problems-in-schema-decomposition/</link><pubDate>Tue, 09 Nov 2021 11:28:20 +0800</pubDate><guid>https://qizhengzou.github.io/2021/problems-in-schema-decomposition/</guid><description>模式分解存在的问题 模式分解存在什么问题 模式分解需要关注： R与p在数据内容方面是否等价：分解的无损连接性； R与p在数据依赖方面是否等价：分解的</description></item><item><title>Mysql_base_07</title><link>https://qizhengzou.github.io/2021/functional-dependence-and-its-axiom-theorem/</link><pubDate>Tue, 09 Nov 2021 11:28:16 +0800</pubDate><guid>https://qizhengzou.github.io/2021/functional-dependence-and-its-axiom-theorem/</guid><description>函数依赖及其公理定理 函数依赖 定义： 函数依赖: 设R(U)是属性集合U={A1,A2,…,An}上的一个关系模式，X, Y是U上的两个子集，若对R</description></item><item><title>Mysql_base_06</title><link>https://qizhengzou.github.io/2021/database-design/</link><pubDate>Tue, 09 Nov 2021 11:28:11 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-design/</guid><description>数据库设计 强弱实体的个人理解 在正文之前，我总结一下我对强弱实体的个人理解： 区别弱实体与强实体的关键在于主键，“依赖”的实质是主键之间的关系。</description></item><item><title>Mysql_base_05</title><link>https://qizhengzou.github.io/2021/ideas-and-methods-of-data-modeling/</link><pubDate>Tue, 09 Nov 2021 11:28:06 +0800</pubDate><guid>https://qizhengzou.github.io/2021/ideas-and-methods-of-data-modeling/</guid><description>数据库建模思想与方法 为什么要数据建模和数据库设计? 数据模型与概念模型: 表达计算机世界的模型称数据模型；表达信息世界的模型称概念数据模型，简称</description></item><item><title>Mysql_base_04</title><link>https://qizhengzou.github.io/2021/database-management-and-maintenance/</link><pubDate>Tue, 09 Nov 2021 11:17:14 +0800</pubDate><guid>https://qizhengzou.github.io/2021/database-management-and-maintenance/</guid><description>数据库管理与维护 数据库完整性与安全性控制 数据库完整性的概念及分类 数据库完整性(DB Integrity)是指DBMS应保证DB在任何情况下的正</description></item><item><title>Mysql_base_03</title><link>https://qizhengzou.github.io/2021/sql/</link><pubDate>Tue, 09 Nov 2021 11:17:06 +0800</pubDate><guid>https://qizhengzou.github.io/2021/sql/</guid><description>sql语言 SQL语言概述 SQL语言提出和发展 1974年，由Boyce和Chamber提出 1975-1979年，在System R上首次实现，由</description></item><item><title>BigData_base_03</title><link>https://qizhengzou.github.io/2021/hdfs/</link><pubDate>Mon, 08 Nov 2021 19:28:38 +0800</pubDate><guid>https://qizhengzou.github.io/2021/hdfs/</guid><description>深入理解HDFS 关于数据存储方法的说明 本地文件系统 关系数据库（MySQL，Oracle，MS SQL Server等） NoSQL数据库：MongoD</description></item><item><title>BigData_base_02</title><link>https://qizhengzou.github.io/2021/hadoop/</link><pubDate>Mon, 08 Nov 2021 17:28:47 +0800</pubDate><guid>https://qizhengzou.github.io/2021/hadoop/</guid><description>hadoop 入门 引例：web搜索引擎 搜索引擎：网络文档集合的检索器 怎么快速存储？ “水平拓展”&amp;ndash;分布式存储 怎么快速检索？ 快速检索模型：基于倒</description></item><item><title>BigData_base_01</title><link>https://qizhengzou.github.io/2021/big-data/</link><pubDate>Mon, 08 Nov 2021 09:23:24 +0800</pubDate><guid>https://qizhengzou.github.io/2021/big-data/</guid><description>先修课程 高等数学、代数与几何、概率论与数理统计、高级语言程序设计 从该课程你能学到什么? 如何在实际应用中设计和实现大数据项目 ➢ 大数据项目作为一</description></item><item><title>MachineLlearning_base_01</title><link>https://qizhengzou.github.io/2021/machine-learning-review/</link><pubDate>Sun, 07 Nov 2021 18:32:54 +0800</pubDate><guid>https://qizhengzou.github.io/2021/machine-learning-review/</guid><description>复习 概念题、简答题、计算题、算法补全。作业题以及上课例子。 重要地是掌握前面几章，后面是算法层面的。 基本概念估计占分较大 1. 绪论： 什么是学习？什</description></item><item><title>Mysql_base_02</title><link>https://qizhengzou.github.io/2021/mysql-relational-model-and-relational-operation./</link><pubDate>Sun, 07 Nov 2021 09:18:21 +0800</pubDate><guid>https://qizhengzou.github.io/2021/mysql-relational-model-and-relational-operation./</guid><description>关系模型与关系运算 关系模型与关系运算简述 关系模型的提出与作用 关系模型最早由E.F.Codd在1970年提出 是从表(Table)及表的处理方式</description></item><item><title>Mysql_base_01</title><link>https://qizhengzou.github.io/2021/mysql-conceptual-structure/</link><pubDate>Sun, 07 Nov 2021 09:14:50 +0800</pubDate><guid>https://qizhengzou.github.io/2021/mysql-conceptual-structure/</guid><description>数据库概念结构 基本概念 32 什么是数据库及为什么要学数据库？ 现代信息社会有异于传统社会，业务工作是建立在计算机网络以及数据库的支持上的。数据库将</description></item></channel></rss>